lower_sl = c(lower_sl, lower_sl_h)
upper_sl = c(upper_sl, upper_sl_h)}
df = tibble(time = 0:23) %>%
mutate(N = n_sl,
Mean = mean_sl,
SD = sd_sl,
Lower95 = lower_sl,
Upper95 = upper_sl
)
p1 = ggplot() +
geom_rect(data = df, aes(xmin = 0, xmax = 0, ymin = -Inf, ymax = Inf))+
geom_rect(aes(xmin = 18.5, xmax = 23, ymin = -Inf, ymax = Inf, alpha = 0.1))+
geom_rect(aes(xmin = 0, xmax = 5.5, ymin = -Inf, ymax = Inf, alpha = 0.1))+
geom_pointrange(data = df, aes(time, Mean, ymin = Lower95, ymax = Upper95), size = 0.2)+
geom_vline(xintercept = c(5.5, 18.5), linetype="dashed",
linewidth=0.8)+
xlab("Time (hour)") + ylab("Mean step length (m)") +
xlim(0, 23)+
theme(legend.position='none')
trk <- dagami %>%
make_track(x_, y_, ts,
id = id, Fix = Fix,
crs = 2971) %>%
tracked_from_to(from = as.POSIXct("2023-05-19 20:00"),
to = as.POSIXct("2024-10-01 08:00"))
dat1 <- trk %>% nest(data = -id)
dat2 <- dat1 %>%
mutate(dat.resample = map(data, ~ track_resample(., rate = minutes(60),
tolerance = minutes(10))))%>%
mutate(ssf = map(dat.resample, ~ .x %>% steps_by_burst())) %>%
dplyr::select(ssf, id) %>% unnest(cols = ssf) %>%
filter(sl_ > 0) %>%
na.omit(., cols=c("x2_","y2_")) %>%
st_as_sf(.,coords = c("x2_","y2_"), crs = 2971) %>%
mutate(dist_colony = st_distance(., colony) %>%
as.numeric())%>%
mutate(x1_ = st_coordinates(.)[, "X"],
y1_ = st_coordinates(.)[, "Y"]) %>%
st_drop_geometry() %>%
subset(dist_colony > 0) %>%
subset(dist_colony < Inf) %>%
mutate(presence_colony = dist_colony < colony_radius)
trk = dat2 %>%
na.omit()
trk$sl_cat = trk$sl_ %>%
cut(.,
breaks=c(0, 15, 200, 1000, 10000000),
labels=c('Noise', 'Short','Medium', 'long')) %>%
as.factor()
levels(trk$sl_cat) = c('0-15', '15-200','200-1000', '1000+')
library(gcookbook) # Load gcookbook for the cabbage_exp data set
trk  = trk %>% rename(Category = sl_cat)
p2 = ggplot(trk, aes(x = hour(t1_), y = length(Category), fill = Category)) +
geom_col(position = "fill") +
ylab("Category") +
xlab("Hour") +
scale_fill_brewer(palette="Greys", direction=-1)
trk5 <- dagami %>%
make_track(x_, y_, ts,
id = id, Fix = Fix,
crs = 2971) %>%
tracked_from_to(from = as.POSIXct("2023-05-19 20:00"),
to = as.POSIXct("2024-10-01 08:00"))
dat1 <- trk5 %>%
nest(data = -id)
dat2 <- dat1 %>%
mutate(dat.resample = map(data, ~ track_resample(., rate = minutes(60),
tolerance = minutes(10))))%>%
mutate(ssf = map(dat.resample, ~ .x %>% steps_by_burst())) %>%
dplyr::select(ssf, id) %>% unnest(cols = ssf) %>%
filter(sl_ > 0) %>%
na.omit(., cols=c("x2_","y2_")) %>%
st_as_sf(.,coords = c("x2_","y2_"), crs = 2971) %>%
mutate(dist_colony = st_distance(., colony) %>%
as.numeric())%>%
mutate(x2_ = st_coordinates(.)[, "X"],
y2_ = st_coordinates(.)[, "Y"]) %>%
st_drop_geometry() %>%
subset(dist_colony > 0) %>%
subset(dist_colony < Inf) %>%
mutate(presence_colony2 = dist_colony < colony_radius)
dat3 <- dat2 %>%
st_as_sf(.,coords = c("x1_","y1_"), crs = 2971) %>%
mutate(dist_colony1 = st_distance(., colony) %>%
as.numeric())%>%
mutate(x1_ = st_coordinates(.)[, "X"],
y1_ = st_coordinates(.)[, "Y"]) %>%
st_drop_geometry() %>%
mutate(presence_colony1 = dist_colony1 < colony_radius) %>%
mutate(tranzit_vers_colony = !presence_colony1 & presence_colony2)%>%
mutate(tranzit_vers_ext = presence_colony1 & !presence_colony2)%>%
mutate(tranzit = presence_colony1 != presence_colony2) %>%
mutate(hour = as.integer(hour(t1_)))
dat4 = dat3  %>%
mutate(TRANZITcat = case_when((!presence_colony1 & presence_colony2) ~ "tranzit_vers_colony",
(presence_colony1 & !presence_colony2) ~ "tranzit_vers_ext",
TRUE ~ "no_transit"))
a1 = dat4 %>% aggregate(tranzit_vers_colony ~ hour, data = ., sum) %>%
mutate(nature_tranzit = "toward the colony") %>%
rename(count = tranzit_vers_colony)
a2 = dat4 %>% aggregate(tranzit_vers_ext ~ hour, data = ., sum) %>%
mutate(nature_tranzit = "outward of the colony") %>%
rename(count = tranzit_vers_ext)
res_tranz = rbind(a1, a2) %>%
rename( Mouvement = nature_tranzit)
res_tranz = res_tranz
p3 = ggplot() +
geom_bar(data=res_tranz, aes(x=hour, y=count, fill=Mouvement),
stat="identity", position=position_dodge()) +
xlab("Time (hour)") +
ylab("Count")+
theme(legend.position = c(0.7, 0.7))
figure = ggarrange(
p2,
ggarrange(p1, p3, ncol = 2, labels = c("B", "C"), vjust = -0.1),
nrow = 2,
labels = "A",
vjust = 2
)
figure
dagami_KBA = rbind(dagami_42,
dagami_43,
dagami_44,
dagami_45,
dagami_46,
dagami_47,
dagami_48,
dagami_50,
dagami_52,
dagami_53) %>%
subset(., Date != "10/05/2023")
dagami_KBA$ts = paste(dagami_KBA$Date, dagami_KBA$Time) %>%
dmy_hms()
dagami_KBA$ts = dagami_KBA$ts - hms("03:00:00")
dagami_KBA = dagami_KBA %>%
subset(., CRC == "OK") %>%
rename(x_ = Longitude,
y_ = Latitude)
dataGroup <- formatFields(
dataGroup = dagami_KBA,
fieldID   = "id",
fieldDateTime = "ts",
fieldLon  = "x_",
fieldLat  = "y_"
)
colony <- dataGroup %>%
summarise(
Longitude = -52.158637,
Latitude  = 4.644658
)
trips <- tripSplit(
dataGroup  = dataGroup,
colony     = colony,
innerBuff  = 1,      # kilometers
returnBuff = 3,
duration   = 0.5,      # hours
rmNonTrip  = TRUE
)
trips <- subset(trips, trips$Returns == "Yes" )
sumTrips <- tripSummary(trips = trips, colony = colony)
res = sumTrips %>%
dplyr::select(ID, duration, max_dist, n_locs) %>%
mutate(duration = duration%>% round(digits = 1))%>%
mutate(max_dist = max_dist%>% round(digits = 1)) %>%
mutate(n_locs = n_locs %>% floor() %>% as.character())
res = rbind(res,
tibble( ID = "Median",
duration = median(res$duration)%>% round(., digits = 1),
max_dist = median(res$max_dist)%>% round(., digits = 1),
n_locs = ""))
colnames(res) = c("ID No.", "Duration (hour)", "Dist.Max (km)", "Fixes")
#les max
min_duration = res$`Duration (hour)` %>% min() %>% round(., digits = 1)
max_duration = res$`Duration (hour)` %>% max() %>% round(., digits = 1)
med_duration = res[res$`ID No.` == "Median", c("Duration (hour)")] %>% max() %>% round(., digits = 1)
med_dist = res[res$`ID No.` == "Median", c("Dist.Max (km)")]  %>% max() %>% round(., digits = 1)
max_dist = res$`Dist.Max (km)` %>% max() %>% round(., digits = 1)
res %>%
kbl(., booktabs = T, caption = "Duration and maximum distance of complete foraging trips. A complete foraging trip is defined as a set of positions starting at the colony and ending at the colony.") %>%
kable_paper(latex_options = c("striped", "hold_position"), full_width = F)
trk <- dagami %>%
make_track(x_, y_, ts,
id = id,
crs = 2971) %>%
tracked_from_to(from = as.POSIXct("2023-05-19 20:00"),
to = as.POSIXct("2024-10-01 08:00"))
# nest --------------------------------------------------------------------
dat2 <- trk |> nest(data = -c(id)) |>
mutate(
data = map(data, ~ track_resample(.x, rate = hours(1), tolerance = minutes(5))),
n = map_int(data, nrow)) |>
mutate(
hr.akde= map(data, hr_akde),
hr.kde = map(data, hr_kde)
)
dat3 <- dat2 |>
pivot_longer(hr.kde, names_to = "estimator", values_to = "hr") %>%
mutate(hr_kde = map_dbl(hr, ~ round(as.numeric(hr_area(.x)$area)/1000000, digits = 1))) %>%
dplyr::select(hr_kde, n)
dat4  = dat2 %>%
pivot_longer(hr.akde, names_to = "estimator", values_to = "hr") %>%
mutate(hr_akde_inf = map_dbl(hr, ~ round(as.numeric(hr_area(.x)$area[1])/1000000, digits = 1)),
hr_akde_est = map_dbl(hr, ~ round(as.numeric(hr_area(.x)$area[2])/1000000, digits = 1)),
hr_akde_sup = map_dbl(hr, ~ round(as.numeric(hr_area(.x)$area[3])/1000000, digits = 1)))%>%
dplyr::select(id, hr_akde_inf, hr_akde_est, hr_akde_sup) %>%
mutate(hr_akde_inf = hr_akde_inf,
hr_akde_sup = hr_akde_sup)
res_kde = cbind(dat4, dat3, paste0("[", dat4$hr_akde_inf, "-", dat4$hr_akde_sup, "]"))
colnames(res_kde) = c("ID No.", "hr_akde_inf", "hr_akde_est","hr_akde_sup", "95% KDE (km2)", "Fixes", "95% aKDE (km2)" )
res_kde = res_kde %>%
dplyr::select(`ID No.`, `95% KDE (km2)`, `95% aKDE (km2)`, Fixes)
colnames(res_kde) = c("ID No.", "95% KDE (km\u00B2)","95% aKDE (km\u00B2)", "Fixes")
res_kde %>%
kbl(., booktabs = T, caption = "Minimum home ranges estimated at 95% by Kernel Density Estimate (KDE) and autocorrelated Kernel Density Estimate (aKDE) method for ten Agami Herons (Agamia agami) in Kaw-Roura Marsh National Nature Reserve (French Guiana).") %>%
kable_paper(latex_options = c("striped"), full_width = F)  %>%
footnote(number = c("aKDE values are given with a 95% confidence interval"))
colnames(res_kde) = c("ID No.", "hr_akde_inf", "hr_akde_est","hr_akde_sup", "95% KDE (km2)", "Fixes", "95% aKDE (km2)" )
res_kde = cbind(dat4, dat3, paste0("[", dat4$hr_akde_inf, "-", dat4$hr_akde_sup, "]"))
colnames(res_kde) = c("ID No.", "hr_akde_inf", "hr_akde_est","hr_akde_sup", "95% KDE (km2)", "Fixes", "95% aKDE (km2)" )
res_kde = res_kde %>%
dplyr::select(`ID No.`, `95% KDE (km2)`, hr_akde_est, `95% aKDE (km2)`, Fixes)
colnames(res_kde) = c("ID No.", "95% KDE (km\u00B2)", "95% aKDE", "CI aKDE (km\u00B2)", "Fixes")
res_kde %>%
kbl(., booktabs = T, caption = "Minimum home ranges estimated at 95% by Kernel Density Estimate (KDE) and autocorrelated Kernel Density Estimate (aKDE) method for ten Agami Herons (Agamia agami) in Kaw-Roura Marsh National Nature Reserve (French Guiana).") %>%
kable_paper(latex_options = c("striped"), full_width = F)  %>%
footnote(number = c("aKDE values are given with a 95% confidence interval"))
res_kde = cbind(dat4, dat3, paste0("[", dat4$hr_akde_inf, "-", dat4$hr_akde_sup, "]"))
colnames(res_kde) = c("ID No.", "hr_akde_inf", "hr_akde_est","hr_akde_sup", "95% KDE (km2)", "Fixes", "95% aKDE (km2)" )
res_kde = res_kde %>%
dplyr::select(`ID No.`, `95% KDE (km2)`, hr_akde_est, `95% aKDE (km2)`, Fixes)
colnames(res_kde) = c("ID No.", "95% KDE (km\u00B2)", "95% aKDE (km\u00B2)", "CI aKDE (km\u00B2)", "Fixes")
res_kde = cbind(dat4, dat3, paste0("[", dat4$hr_akde_inf, "-", dat4$hr_akde_sup, "]"))
colnames(res_kde) = c("ID No.", "hr_akde_inf", "hr_akde_est","hr_akde_sup", "95% KDE (km2)", "Fixes", "95% aKDE (km2)" )
res_kde = res_kde %>%
dplyr::select(`ID No.`, `95% KDE (km2)`, hr_akde_est, `95% aKDE (km2)`, Fixes)
colnames(res_kde) = c("ID No.", "95% KDE (km\u00B2)", "95% aKDE (km\u00B2)", "CI aKDE (km\u00B2)", "Fixes")
res_kde %>%
kbl(., booktabs = T, caption = "Minimum home ranges estimated at 95% by Kernel Density Estimate (KDE) and autocorrelated Kernel Density Estimate (aKDE) method for ten Agami Herons (Agamia agami) in Kaw-Roura Marsh National Nature Reserve (French Guiana).") %>%
kable_paper(latex_options = c("striped"), full_width = F)  %>%
footnote(number = c("aKDE values are given with a 95% confidence interval"))
res_kde = cbind(dat4, dat3, paste0("[", dat4$hr_akde_inf, "-", dat4$hr_akde_sup, "]"))
colnames(res_kde) = c("ID No.", "hr_akde_inf", "hr_akde_est","hr_akde_sup", "95% KDE (km2)", "Fixes", "95% aKDE (km2)" )
res_kde = res_kde %>%
dplyr::select(`ID No.`, `95% KDE (km2)`, hr_akde_est, `95% aKDE (km2)`, Fixes)
colnames(res_kde) = c("ID No.", "95% KDE (km\u00B2)", "95% aKDE (km\u00B2)", "CI 95% aKDE (km\u00B2)", "Fixes")
res_kde %>%
kbl(., booktabs = T, caption = "Minimum home ranges estimated at 95% by Kernel Density Estimate (KDE) and autocorrelated Kernel Density Estimate (aKDE) method for ten Agami Herons (Agamia agami) in Kaw-Roura Marsh National Nature Reserve (French Guiana).") %>%
kable_paper(latex_options = c("striped"), full_width = F)  %>%
footnote(number = c("aKDE values are given with a 95% confidence interval"))
?hr_akde
dat2 <- trk |> nest(data = -c(id)) |>
mutate(
data = map(data, ~ track_resample(.x, rate = hours(1), tolerance = minutes(5))),
n = map_int(data, nrow)) |>
mutate(
hr.akde= map(data, hr_akde),
hr.kde95 = map(data, hr_kde, levels = 0.95),
hr.kde50 = map(data, hr_kde, levels = 0.50)
)
dat2 <- trk |> nest(data = -c(id)) |>
mutate(
data = map(data, ~ track_resample(.x, rate = hours(1), tolerance = minutes(5))),
n = map_int(data, nrow)) |>
mutate(
hr.akde= map(data, hr_akde),
hr.kde95 = map(data, hr_kde, levels = 0.95),
hr.kde50 = map(data, hr_kde, levels = 0.50)
)
dat3 <- dat2 |>
pivot_longer(hr.kde95, names_to = "estimator", values_to = "hr") %>%
mutate(hr.kde95 = map_dbl(hr, ~ round(as.numeric(hr_area(.x)$area)/1000000, digits = 1))) %>%
dplyr::select(hr.kde95, n)
dat5 <- dat2 |>
pivot_longer(hr.kde50, names_to = "estimator", values_to = "hr") %>%
mutate(hr.kde50 = map_dbl(hr, ~ round(as.numeric(hr_area(.x)$area)/1000000, digits = 1))) %>%
dplyr::select(hr.kde50)
dat4  = dat2 %>%
pivot_longer(hr.akde, names_to = "estimator", values_to = "hr") %>%
mutate(hr_akde_inf = map_dbl(hr, ~ round(as.numeric(hr_area(.x)$area[1])/1000000, digits = 1)),
hr_akde_est = map_dbl(hr, ~ round(as.numeric(hr_area(.x)$area[2])/1000000, digits = 1)),
hr_akde_sup = map_dbl(hr, ~ round(as.numeric(hr_area(.x)$area[3])/1000000, digits = 1)))%>%
dplyr::select(id, hr_akde_inf, hr_akde_est, hr_akde_sup) %>%
mutate(hr_akde_inf = hr_akde_inf,
hr_akde_sup = hr_akde_sup)
trk <- dagami %>%
make_track(x_, y_, ts,
id = id,
crs = 2971) %>%
tracked_from_to(from = as.POSIXct("2023-05-19 20:00"),
to = as.POSIXct("2024-10-01 08:00"))
# nest --------------------------------------------------------------------
dat2 <- trk |> nest(data = -c(id)) |>
mutate(
data = map(data, ~ track_resample(.x, rate = hours(1), tolerance = minutes(5))),
n = map_int(data, nrow)) |>
mutate(
hr.akde= map(data, hr_akde),
hr.kde95 = map(data, hr_kde, levels = 0.95),
hr.kde50 = map(data, hr_kde, levels = 0.50)
)
dat3 <- dat2 |>
pivot_longer(hr.kde95, names_to = "estimator", values_to = "hr") %>%
mutate(hr.kde95 = map_dbl(hr, ~ round(as.numeric(hr_area(.x)$area)/1000000, digits = 1))) %>%
dplyr::select(hr.kde95, n)
dat5 <- dat2 |>
pivot_longer(hr.kde50, names_to = "estimator", values_to = "hr") %>%
mutate(hr.kde50 = map_dbl(hr, ~ round(as.numeric(hr_area(.x)$area)/1000000, digits = 1))) %>%
dplyr::select(hr.kde50)
dat4  = dat2 %>%
pivot_longer(hr.akde, names_to = "estimator", values_to = "hr") %>%
mutate(hr_akde_inf = map_dbl(hr, ~ round(as.numeric(hr_area(.x)$area[1])/1000000, digits = 1)),
hr_akde_est = map_dbl(hr, ~ round(as.numeric(hr_area(.x)$area[2])/1000000, digits = 1)),
hr_akde_sup = map_dbl(hr, ~ round(as.numeric(hr_area(.x)$area[3])/1000000, digits = 1)))%>%
dplyr::select(id, hr_akde_inf, hr_akde_est, hr_akde_sup) %>%
mutate(hr_akde_inf = hr_akde_inf,
hr_akde_sup = hr_akde_sup)
res_kde = cbind(dat5, dat4, dat3, paste0("[", dat4$hr_akde_inf, "-", dat4$hr_akde_sup, "]"))
colnames(res_kde) = c("ID No.","KDE50",  "hr_akde_inf", "hr_akde_est","hr_akde_sup", "95% KDE (km2)", "Fixes", "95% aKDE (km2)" )
res_kde = res_kde %>%
dplyr::select(`ID No.`, KDE50, `95% KDE (km2)`, hr_akde_est, `95% aKDE (km2)`, Fixes)
colnames(res_kde) = c("ID No.", "50% KDE (km\u00B2)",  "95% KDE (km\u00B2)", "95% aKDE (km\u00B2)", "CI 95% aKDE (km\u00B2)", "Fixes")
res_kde %>%
kbl(., booktabs = T, caption = "Minimum home ranges estimated at 95% by Kernel Density Estimate (KDE) and autocorrelated Kernel Density Estimate (aKDE) method for ten Agami Herons (Agamia agami) in Kaw-Roura Marsh National Nature Reserve (French Guiana).") %>%
kable_paper(latex_options = c("striped"), full_width = F)  %>%
footnote(number = c("aKDE values are given with a 95% confidence interval"))
res_kde = cbind(dat5, dat4, dat3, paste0("[", dat4$hr_akde_inf, "-", dat4$hr_akde_sup, "]"))
colnames(res_kde) = c("KDE50", "ID No.",  "hr_akde_inf", "hr_akde_est","hr_akde_sup", "95% KDE (km2)", "Fixes", "95% aKDE (km2)" )
res_kde = res_kde %>%
dplyr::select(`ID No.`, KDE50, `95% KDE (km2)`, hr_akde_est, `95% aKDE (km2)`, Fixes)
colnames(res_kde) = c("ID No.", "50% KDE (km\u00B2)",  "95% KDE (km\u00B2)", "95% aKDE (km\u00B2)", "CI 95% aKDE (km\u00B2)", "Fixes")
res_kde %>%
kbl(., booktabs = T, caption = "Minimum home ranges estimated at 95% by Kernel Density Estimate (KDE) and autocorrelated Kernel Density Estimate (aKDE) method for ten Agami Herons (Agamia agami) in Kaw-Roura Marsh National Nature Reserve (French Guiana).") %>%
kable_paper(latex_options = c("striped"), full_width = F)  %>%
footnote(number = c("aKDE values are given with a 95% confidence interval"))
res_kde = cbind(dat5, dat4, dat3, paste0("[", dat4$hr_akde_inf, "-", dat4$hr_akde_sup, "]"))
colnames(res_kde) = c("KDE50", "ID No.",  "hr_akde_inf", "hr_akde_est","hr_akde_sup", "95% KDE (km2)", "Fixes", "95% aKDE (km2)" )
res_kde = res_kde %>%
dplyr::select(`ID No.`, KDE50, `95% KDE (km2)`, hr_akde_est, `95% aKDE (km2)`, Fixes)
colnames(res_kde) = c("ID No.", "50% KDE (km\u00B2)",  "95% KDE (km\u00B2)", "95% aKDE (km\u00B2)", "CI 95% aKDE (km\u00B2)\u00B9", "Fixes")
res_kde %>%
kbl(., booktabs = T, caption = "Minimum home ranges estimated at 95% by Kernel Density Estimate (KDE) and autocorrelated Kernel Density Estimate (aKDE) method for ten Agami Herons (Agamia agami) in Kaw-Roura Marsh National Nature Reserve (French Guiana).") %>%
kable_paper(latex_options = c("striped"), full_width = F)  %>%
footnote(number = c("aKDE values are given with a 95% confidence interval"))
# Load packages ----
library(tidyverse)
# Load packages ----
library(tidyverse)
library(mvtnorm)
library(amt)
library(purrr)
library(lubridate)
library(sf)
library(terra)
library(glmmTMB)
library(broom)
library(tidyverse)
library(raster)
library(here)
library(prismatic)
library(ggmap)
library(track2KBA)
# 1. Load data ----
# Habitat data
onf = st_read("ocs_onf_2015/oc_sol_2015.shp") %>%
dplyr::select(NIVEAU3_15) %>%
mutate(NIVEAU3_15 = fct_collapse(NIVEAU3_15,
Mangroves = c("318"),
Marais_interieur = c("411"),
Forets_inondables = c("317"),
Forets_terrestres = c("3151", "3152", "3161", "3162", "3154"))) %>%
subset(., NIVEAU3_15 == "Marais_interieur" |
NIVEAU3_15 == "Forets_inondables" )
cycle_hire_osm = onf
cycle_hire_osm_projected = st_transform(cycle_hire_osm, "EPSG:2971")
raster_template = rast(ext(cycle_hire_osm_projected), resolution = 100,
crs = st_crs(cycle_hire_osm_projected)$wkt)
hab = rasterize(cycle_hire_osm_projected, raster_template, field = "NIVEAU3_15",
fun = "max")
names(hab) = c("sol_onf")
# data agami
dagami_42 = read.csv('data/X42.csv',sep=';', dec = ",") %>%
mutate( id = "42")
dagami_43 =read.csv('data/X43.csv',sep=';', dec = ",") %>%
mutate( id = "43")
dagami_44 =read.csv('data/X44.csv',sep=';', dec = ",") %>%
mutate( id = "44")
dagami_45 =read.csv('data/X45.csv',sep=';', dec = ",") %>%
mutate( id = "45")
dagami_46 =read.csv('data/X46.csv',sep=';', dec = ",") %>%
mutate( id = "46")
dagami_47 =read.csv('data/X47.csv',sep=';', dec = ",") %>%
mutate( id = "47")
dagami_48 =read.csv('data/X48.csv',sep=';', dec = ",") %>%
mutate( id = "48")
dagami_50 =read.csv('data/X50.csv',sep=';', dec = ",") %>%
mutate( id = "50")
dagami_52 =read.csv('data/X52.csv',sep=';', dec = ",") %>%
mutate( id = "52")
dagami_53 =read.csv('data/X53.csv',sep=';', dec = ",") %>%
mutate( id = "53")
dagami = rbind(dagami_42,
dagami_43,
dagami_44,
dagami_45,
dagami_46,
dagami_47,
dagami_48,
dagami_50,
dagami_52,
dagami_53) %>%
subset(., Date != "10/05/2023") # pre deployment test day
# coordonnees de la colonie
colony <- tibble(
Longitude = -52.158637,
Latitude  = 4.644658 )%>%
st_as_sf(.,coords = c("Longitude","Latitude"), crs = 4326) %>%
st_transform(., crs = 2971)
# rayon estime de la colonie
rayon_colony = 1000 # unit: meter
# formatage
dagami  = dagami %>%
mutate(ts = dmy_hms(paste(dagami$Date, dagami$Time))) %>%
mutate(ts = ts - hms("03:00:00")) %>%
rename(x_ = Longitude, y_ = Latitude) %>%
subset(., CRC == "OK") %>%
dplyr::select(id, x_, y_, ts, Fix)
dagami  = dagami %>%
st_as_sf(.,coords = c("x_","y_"), crs = 4326) %>%
st_transform(., crs = 2971) %>%
mutate(dist_colony = st_distance(., colony))%>%
mutate(x_ = st_coordinates(.)[, "X"],
y_ = st_coordinates(.)[, "Y"]) %>%
st_drop_geometry() %>%
mutate(dist_colony = as.numeric(dist_colony))
# Filtres -----------------------------------------------------------------
#   -----------------------------------------------------------------------
trk <- dagami %>%
make_track(x_, y_, ts,
id = id, Fix = Fix,
crs = 2971) %>%
tracked_from_to(from = as.POSIXct("2023-05-19 20:00"),
to = as.POSIXct("2024-10-01 08:00"))
dat1 <- trk %>% nest(data = -id)
dat2 <- dat1 %>%
mutate(dat.resample = map(data, ~ track_resample(., rate = minutes(60), tolerance = minutes(10))))
dat.ssf <- dat2 %>%
mutate(ssf = map(dat.resample, ~ .x %>% steps_by_burst()))
dat.ssf2 <- dat.ssf %>% dplyr::select(ssf, id) %>% unnest(cols = ssf) %>%
mutate(log_sl_ = log(sl_), sin_ta_ = sin(ta_))
n_sl = c()
mean_sl = c()
sd_sl = c()
lower_sl = c()
upper_sl = c()
for (h in 0:23){
sl_h = dat.ssf2 %>% subset(.,hour(t1_) == h) %>% pull(sl_)
n_sl_h = length(sl_h)
mean_sl_h = mean(sl_h)
sd_sl_h = sd(sl_h)
lower_sl_h = t.test(sl_h)["conf.int"][[1]][1]
upper_sl_h = t.test(sl_h)["conf.int"][[1]][2]
n_sl = c(n_sl, n_sl_h)
mean_sl = c(mean_sl, mean_sl_h)
sd_sl = c(sd_sl, sd_sl_h)
lower_sl = c(lower_sl, lower_sl_h)
upper_sl = c(upper_sl, upper_sl_h)}
df = tibble(time = 0:23) %>%
mutate(N = n_sl,
Mean = mean_sl,
SD = sd_sl,
Lower95 = lower_sl,
Upper95 = upper_sl
)
p = ggplot() +
geom_rect(data = df, aes(xmin = 0, xmax = 0, ymin = -Inf, ymax = Inf))+
geom_rect(aes(xmin = 18.5, xmax = 23, ymin = -Inf, ymax = Inf, alpha = 0.1))+
geom_rect(aes(xmin = 0, xmax = 5.5, ymin = -Inf, ymax = Inf, alpha = 0.1))+
geom_pointrange(data = df, aes(time, Mean, ymin = Lower95, ymax = Upper95))+
geom_vline(xintercept = c(5.5, 18.5), linetype="dashed",
linewidth=0.8)+
xlab("Time (hour)") + ylab("Mean step length (meter)") +
xlim(0, 23)+
theme(legend.position='none', text = element_text(size = 20))
p
# GLMM --------------------------------------------------------------------
dat.ssf2$day_night = dat.ssf2$t1_ %>%
hour() %>%
cut(.,
breaks=c(0, 6.25, 18.75, 24),
labels=c('Night', 'Day','Night'))
mod <- lm(sl_ ~ day_night, data = dat.ssf2)
mod %>% summary()
smr %>% broom::tidy()
mod <- lm(sl_ ~ day_night, data = dat.ssf2)
smr = mod %>% summary()
smr %>% broom::tidy()
dat.ssf2$day_night = dat.ssf2$t1_ %>%
hour() %>%
cut(.,
breaks=c(0, 6.25, 18.75, 24),
labels=c('Night', 'Day','Night'))
mod <- lm(sl_ ~ day_night, data = dat.ssf2)
res = mod %>% summary() %>% broom::tidy()
kableExtra::kbl(res) %>%
kable_paper("striped", full_width = F)  %>%
row_spec(nrow(res), bold = T)
mod <- lm(sl_ ~ day_night, data = dat.ssf2)
res = mod %>% summary() %>% broom::tidy()
kableExtra::kbl(res) %>%
kable_paper("striped", full_width = F)
kableExtra::kbl(res) %>%
kableExtra::kable_paper("striped", full_width = F)
